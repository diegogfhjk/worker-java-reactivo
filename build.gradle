buildscript {
	ext {
		cleanArchitectureVersion = '3.20.4'
		springBootVersion = '3.3.5'
		sonarVersion = '5.1.0.4882'
		jacocoVersion = '0.8.12'
        lombokVersion = '1.18.36'
	}
}

plugins {
    id 'info.solidsoft.pitest' version '1.9.11'
	id 'co.com.bancolombia.cleanArchitecture' version "${cleanArchitectureVersion}"
	id 'org.springframework.boot' version "${springBootVersion}" apply false
	id 'org.sonarqube' version "${sonarVersion}"
	id 'jacoco'
}


subprojects {
    apply plugin: 'info.solidsoft.pitest'

    pitest {
        targetClasses = ['com.dagh.*']
        targetTests = ['com.dagh.*']
        threads = 4
        mutationThreshold = 80
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

sonar {
    def modules = subprojects.projectDir.collect { "${it.toString().replace(project.projectDir.toString() + "/", "")}" }
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.modules", "${modules.join(',')}"
        property "sonar.sources", "src,deployment,settings.gradle,main.gradle,build.gradle,${modules.collect { "${it}/build.gradle" }.join(',')}"
        property "sonar.exclusions","**/MainApplication.java"
        property "sonar.test", "src/test"
        property "sonar.java.binaries", ""
        property "sonar.junit.reportsPath", ""
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacocoMergedReport/jacocoMergedReport.xml"
        property "sonar.pitest.reportPaths", "build/reports/pitest/mutations.xml"
        property "sonar.externalIssuesReportPaths", "build/issues.json"
    }
}

apply from: './main.gradle'
